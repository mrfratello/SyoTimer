{"version":3,"file":"jquery.syotimer.min.js","sources":["../source/syotimer.lang.js","../source/jquery.syotimer.js"],"sourcesContent":["import $ from \"jquery\";\n\n$.syotimerLang = {\n  rus: {\n    second: [\"секунда\", \"секунды\", \"секунд\"],\n    minute: [\"минута\", \"минуты\", \"минут\"],\n    hour: [\"час\", \"часа\", \"часов\"],\n    day: [\"день\", \"дня\", \"дней\"],\n    handler: \"rusNumeral\",\n  },\n  eng: {\n    second: [\"second\", \"seconds\"],\n    minute: [\"minute\", \"minutes\"],\n    hour: [\"hour\", \"hours\"],\n    day: [\"day\", \"days\"],\n  },\n  por: {\n    second: [\"segundo\", \"segundos\"],\n    minute: [\"minuto\", \"minutos\"],\n    hour: [\"hora\", \"horas\"],\n    day: [\"dia\", \"dias\"],\n  },\n  spa: {\n    second: [\"segundo\", \"segundos\"],\n    minute: [\"minuto\", \"minutos\"],\n    hour: [\"hora\", \"horas\"],\n    day: [\"día\", \"días\"],\n  },\n  heb: {\n    second: [\"שניה\", \"שניות\"],\n    minute: [\"דקה\", \"דקות\"],\n    hour: [\"שעה\", \"שעות\"],\n    day: [\"יום\", \"ימים\"],\n  },\n\n  /**\n   * Universal function for get correct inducement of nouns after a numeral (`number`)\n   * @param number\n   * @returns {number}\n   */\n  universal: function (number) {\n    return number === 1 ? 0 : 1;\n  },\n\n  /**\n   * Get correct inducement of nouns after a numeral for Russian language (rus)\n   * @param number\n   * @returns {number}\n   */\n  rusNumeral: function (number) {\n    var cases = [2, 0, 1, 1, 1, 2],\n      index;\n    if (number % 100 > 4 && number % 100 < 20) {\n      index = 2;\n    } else {\n      index = cases[number % 10 < 5 ? number % 10 : 5];\n    }\n    return index;\n  },\n\n  /**\n   * Getting the correct declension of words after numerals\n   * @param number\n   * @param lang\n   * @param unit\n   * @returns {string}\n   */\n  getNumeral: function (number, lang, unit) {\n    var handlerName = $.syotimerLang[lang].handler || \"universal\",\n      index = this[handlerName](number);\n    return $.syotimerLang[lang][unit][index];\n  },\n};\n","import $ from \"jquery\";\nimport \"./syotimer.lang\";\n\nvar DAY = \"day\",\n  HOUR = \"hour\",\n  MINUTE = \"minute\",\n  SECOND = \"second\";\nvar DAY_IN_SEC = 24 * 60 * 60;\nvar HOUR_IN_SEC = 60 * 60;\nvar MINUTE_IN_SEC = 60;\nvar LAYOUT_TYPES = {\n  d: DAY,\n  h: HOUR,\n  m: MINUTE,\n  s: SECOND,\n};\nvar UNIT_LINKED_LIST = {\n  list: [SECOND, MINUTE, HOUR, DAY],\n  next: function (current) {\n    var currentIndex = this.list.indexOf(current);\n    return currentIndex < this.list.length\n      ? this.list[currentIndex + 1]\n      : false;\n  },\n  prev: function (current) {\n    var currentIndex = this.list.indexOf(current);\n    return currentIndex > 0 ? this.list[currentIndex - 1] : false;\n  },\n};\n\nvar DEFAULTS = {\n  year: 2034,\n  month: 7,\n  day: 31,\n  hour: 0,\n  minute: 0,\n  second: 0,\n  timeZone: \"local\", // setting the time zone of deadline.\n  // If 'local' then the time zone is ignored and\n  // the deadline is determined by local time of the user.\n  // Otherwise, specifies the offset from the UTC\n  ignoreTransferTime: false, // If `true` then transfer to summer/winter time will not be considered.\n  layout: \"dhms\", // sets an order of layout of units of the timer:\n  // days (d) of hours ('h'), minute ('m'), second ('s').\n  periodic: false, //`true` - the timer is periodic.\n  // If the date until which counts the timer is reached,\n  // the next value date which will count down\n  // the timer is incremented by the value `periodInterval`\n  periodInterval: 7, // the period of the timer in `periodUnit`\n  // (if `periodic` is set to `true`)\n  periodUnit: \"d\", // the unit of measurement period timer\n\n  doubleNumbers: true, // `true` - show hours, minutes and seconds with leading zeros\n  // (2 hours 5 minutes 4 seconds = 02:05:04)\n  effectType: \"none\", // The effect of changing the value of seconds\n  lang: \"eng\", // localization of a countdown signatures (days, hours, minutes, seconds)\n  headTitle: \"\", // text above the countdown (may be as html string)\n  footTitle: \"\", // text under the countdown (may be as html string)\n  afterDeadline: function (timerBlock) {\n    timerBlock.bodyBlock.html(\n      '<p style=\"font-size: 1.2em;\">The countdown is finished!</p>'\n    );\n  },\n};\n\nvar ITEMS_HAS_OPTIONS = {\n  second: false,\n  minute: false,\n  hour: false,\n  day: false,\n};\n\nvar SyoTimer = {\n  /**\n   * Init syotimer on DOM\n   * @param settings\n   * @returns {Array|Object|*}\n   */\n  init: function (settings) {\n    var options = $.extend({}, DEFAULTS, settings || {});\n    options.itemTypes = staticMethod.getItemTypesByLayout(options.layout);\n    options._itemsHas = $.extend({}, ITEMS_HAS_OPTIONS);\n    for (var i = 0; i < options.itemTypes.length; i++) {\n      options._itemsHas[options.itemTypes[i]] = true;\n    }\n    return this.each(function () {\n      var elementBox = $(this);\n      elementBox.data(\"syotimer-options\", options);\n      SyoTimer._render.apply(this, []);\n      SyoTimer._perSecondHandler.apply(this, []);\n    });\n  },\n\n  /**\n   * Rendering base elements of countdown\n   * @private\n   */\n  _render: function () {\n    var elementBox = $(this),\n      options = elementBox.data(\"syotimer-options\");\n\n    var timerItem = staticMethod.getTimerItem(),\n      headBlock = $(\"<div/>\", { class: \"syotimer__head\" }).html(\n        options.headTitle\n      ),\n      bodyBlock = $(\"<div/>\", { class: \"syotimer__body\" }),\n      footBlock = $(\"<div/>\", { class: \"syotimer__footer\" }).html(\n        options.footTitle\n      ),\n      itemBlocks = {};\n\n    for (var i = 0; i < options.itemTypes.length; i++) {\n      var item = timerItem.clone();\n      item.addClass(\"syotimer-cell_type_\" + options.itemTypes[i]);\n      bodyBlock.append(item);\n      itemBlocks[options.itemTypes[i]] = item;\n    }\n    var timerBlocks = {\n      headBlock: headBlock,\n      bodyBlock: bodyBlock,\n      footBlock: footBlock,\n    };\n    elementBox\n      .data(\"syotimer-blocks\", timerBlocks)\n      .data(\"syotimer-items\", itemBlocks)\n      .addClass(\"syotimer\")\n      .append(headBlock)\n      .append(bodyBlock)\n      .append(footBlock);\n  },\n\n  /**\n   * Handler called per seconds while countdown is not over\n   * @private\n   */\n  _perSecondHandler: function () {\n    var elementBox = $(this),\n      options = elementBox.data(\"syotimer-options\");\n    $(\".syotimer-cell > .syotimer-cell__value\", elementBox).css(\"opacity\", 1);\n    var currentDate = new Date(),\n      deadLineDate = new Date(\n        options.year,\n        options.month - 1,\n        options.day,\n        options.hour,\n        options.minute,\n        options.second\n      ),\n      differenceInMilliSec = staticMethod.getDifferenceWithTimezone(\n        currentDate,\n        deadLineDate,\n        options\n      ),\n      secondsToDeadLine = staticMethod.getSecondsToDeadLine(\n        differenceInMilliSec,\n        options\n      );\n    if (secondsToDeadLine >= 0) {\n      SyoTimer._refreshUnitsDom.apply(this, [secondsToDeadLine]);\n      SyoTimer._applyEffectSwitch.apply(this, [options.effectType]);\n    } else {\n      elementBox = $.extend(elementBox, elementBox.data(\"syotimer-blocks\"));\n      options.afterDeadline(elementBox);\n    }\n  },\n\n  /**\n   * Refresh unit DOM of countdown\n   * @param secondsToDeadLine\n   * @private\n   */\n  _refreshUnitsDom: function (secondsToDeadLine) {\n    var elementBox = $(this),\n      options = elementBox.data(\"syotimer-options\"),\n      itemBlocks = elementBox.data(\"syotimer-items\"),\n      unitList = options.itemTypes,\n      unitsToDeadLine = staticMethod.getUnitsToDeadLine(secondsToDeadLine);\n\n    if (!options._itemsHas.day) {\n      unitsToDeadLine.hour += unitsToDeadLine.day * 24;\n    }\n    if (!options._itemsHas.hour) {\n      unitsToDeadLine.minute += unitsToDeadLine.hour * 60;\n    }\n    if (!options._itemsHas.minute) {\n      unitsToDeadLine.second += unitsToDeadLine.minute * 60;\n    }\n    for (var i = 0; i < unitList.length; i++) {\n      var unit = unitList[i],\n        unitValue = unitsToDeadLine[unit],\n        itemBlock = itemBlocks[unit];\n      itemBlock.data(\"syotimer-unit-value\", unitValue);\n      $(\".syotimer-cell__value\", itemBlock).html(\n        staticMethod.format2(\n          unitValue,\n          unit !== DAY ? options.doubleNumbers : false\n        )\n      );\n      $(\".syotimer-cell__unit\", itemBlock).html(\n        $.syotimerLang.getNumeral(unitValue, options.lang, unit)\n      );\n    }\n  },\n\n  /**\n   * Applying effect of changing numbers\n   * @param effectType\n   * @param unit\n   * @private\n   */\n  _applyEffectSwitch: function (effectType, unit) {\n    unit = unit || SECOND;\n    var element = this,\n      elementBox = $(element);\n    if (effectType === \"none\") {\n      setTimeout(function () {\n        SyoTimer._perSecondHandler.apply(element, []);\n      }, 1000);\n    } else if (effectType === \"opacity\") {\n      var itemBlocks = elementBox.data(\"syotimer-items\"),\n        unitItemBlock = itemBlocks[unit];\n      if (unitItemBlock) {\n        var nextUnit = UNIT_LINKED_LIST.next(unit),\n          unitValue = unitItemBlock.data(\"syotimer-unit-value\");\n        $(\".syotimer-cell__value\", unitItemBlock).animate(\n          { opacity: 0.1 },\n          1000,\n          \"linear\",\n          function () {\n            SyoTimer._perSecondHandler.apply(element, []);\n          }\n        );\n        if (nextUnit && unitValue === 0) {\n          SyoTimer._applyEffectSwitch.apply(element, [effectType, nextUnit]);\n        }\n      }\n    }\n  },\n};\n\nvar staticMethod = {\n  /**\n   * Return once cell DOM of countdown: day, hour, minute, second\n   * @returns {object}\n   */\n  getTimerItem: function () {\n    var timerCellValue = $(\"<div/>\", {\n        class: \"syotimer-cell__value\",\n        text: \"0\",\n      }),\n      timerCellUnit = $(\"<div/>\", { class: \"syotimer-cell__unit\" }),\n      timerCell = $(\"<div/>\", { class: \"syotimer-cell\" });\n    timerCell.append(timerCellValue).append(timerCellUnit);\n    return timerCell;\n  },\n\n  getItemTypesByLayout: function (layout) {\n    var itemTypes = [];\n    for (var i = 0; i < layout.length; i++) {\n      itemTypes.push(LAYOUT_TYPES[layout[i]]);\n    }\n    return itemTypes;\n  },\n\n  /**\n   * Getting count of seconds to deadline\n   * @param differenceInMilliSec\n   * @param options\n   * @returns {*}\n   */\n  getSecondsToDeadLine: function (differenceInMilliSec, options) {\n    var secondsToDeadLine,\n      differenceInSeconds = differenceInMilliSec / 1000;\n    differenceInSeconds = Math.floor(differenceInSeconds);\n    if (options.periodic) {\n      var additionalInUnit,\n        differenceInUnit,\n        periodUnitInSeconds = staticMethod.getPeriodUnit(options.periodUnit),\n        fullTimeUnitsBetween =\n          differenceInMilliSec / (periodUnitInSeconds * 1000);\n      fullTimeUnitsBetween = Math.ceil(fullTimeUnitsBetween);\n      fullTimeUnitsBetween = Math.abs(fullTimeUnitsBetween);\n      if (differenceInSeconds >= 0) {\n        differenceInUnit = fullTimeUnitsBetween % options.periodInterval;\n        differenceInUnit =\n          differenceInUnit === 0 ? options.periodInterval : differenceInUnit;\n        differenceInUnit -= 1;\n      } else {\n        differenceInUnit =\n          options.periodInterval -\n          (fullTimeUnitsBetween % options.periodInterval);\n      }\n      additionalInUnit = differenceInSeconds % periodUnitInSeconds;\n\n      // fix когда дедлайн раньше текущей даты,\n      // возникает баг с неправильным расчетом интервала при different пропорциональной periodUnit\n      if (additionalInUnit === 0 && differenceInSeconds < 0) {\n        differenceInUnit--;\n      }\n      secondsToDeadLine = Math.abs(\n        differenceInUnit * periodUnitInSeconds + additionalInUnit\n      );\n    } else {\n      secondsToDeadLine = differenceInSeconds;\n    }\n    return secondsToDeadLine;\n  },\n\n  /**\n   * Getting count of units to deadline\n   * @param secondsToDeadLine\n   * @returns {{}}\n   */\n  getUnitsToDeadLine: function (secondsToDeadLine) {\n    var unit = DAY,\n      unitsToDeadLine = {};\n    do {\n      var unitInMilliSec = staticMethod.getPeriodUnit(unit);\n      unitsToDeadLine[unit] = Math.floor(secondsToDeadLine / unitInMilliSec);\n      secondsToDeadLine = secondsToDeadLine % unitInMilliSec;\n    } while ((unit = UNIT_LINKED_LIST.prev(unit)));\n    return unitsToDeadLine;\n  },\n\n  /**\n   * Determine a unit of period in milliseconds\n   * @param given_period_unit\n   * @returns {number}\n   */\n  getPeriodUnit: function (given_period_unit) {\n    switch (given_period_unit) {\n      case \"d\":\n      case DAY:\n        return DAY_IN_SEC;\n      case \"h\":\n      case HOUR:\n        return HOUR_IN_SEC;\n      case \"m\":\n      case MINUTE:\n        return MINUTE_IN_SEC;\n      case \"s\":\n      case SECOND:\n        return 1;\n    }\n  },\n\n  getDifferenceWithTimezone: function (currentDate, deadLineDate, options) {\n    var differenceByLocalTimezone =\n        deadLineDate.getTime() - currentDate.getTime(),\n      amendmentOnTimezone = 0,\n      amendmentOnTransferTime = 0,\n      amendment;\n    if (options.timeZone !== \"local\") {\n      var timezoneOffset =\n          parseFloat(options.timeZone) * staticMethod.getPeriodUnit(HOUR),\n        localTimezoneOffset =\n          -currentDate.getTimezoneOffset() * staticMethod.getPeriodUnit(MINUTE);\n      amendmentOnTimezone = (timezoneOffset - localTimezoneOffset) * 1000;\n    }\n    if (options.ignoreTransferTime) {\n      var currentTimezoneOffset =\n          -currentDate.getTimezoneOffset() * staticMethod.getPeriodUnit(MINUTE),\n        deadLineTimezoneOffset =\n          -deadLineDate.getTimezoneOffset() *\n          staticMethod.getPeriodUnit(MINUTE);\n      amendmentOnTransferTime =\n        (currentTimezoneOffset - deadLineTimezoneOffset) * 1000;\n    }\n    amendment = amendmentOnTimezone + amendmentOnTransferTime;\n    return differenceByLocalTimezone - amendment;\n  },\n\n  /**\n   * Formation of numbers with leading zeros\n   * @param number\n   * @param isUse\n   * @returns {string}\n   */\n  format2: function (number, isUse) {\n    isUse = isUse !== false;\n    return number <= 9 && isUse ? \"0\" + number : \"\" + number;\n  },\n};\n\nvar methods = {\n  setOption: function (name, value) {\n    var elementBox = $(this),\n      options = elementBox.data(\"syotimer-options\");\n    if (options.hasOwnProperty(name)) {\n      options[name] = value;\n      elementBox.data(\"syotimer-options\", options);\n    }\n  },\n};\n\n$.fn.syotimer = function (options) {\n  if (typeof options === \"string\" && options === \"setOption\") {\n    var otherArgs = Array.prototype.slice.call(arguments, 1);\n    return this.each(function () {\n      methods[options].apply(this, otherArgs);\n    });\n  } else if (\n    options === null ||\n    options === undefined ||\n    typeof options === \"object\"\n  ) {\n    return SyoTimer.init.apply(this, [options]);\n  } else {\n    $.error(\"SyoTimer. Error in call methods: methods is not exist\");\n  }\n};\n"],"names":["syotimerLang","rus","second","minute","hour","day","handler","eng","por","spa","heb","universal","number","rusNumeral","getNumeral","lang","unit","index","this","$","DAY","HOUR","MINUTE","SECOND","LAYOUT_TYPES","d","h","m","s","UNIT_LINKED_LIST","list","next","current","currentIndex","indexOf","length","prev","DEFAULTS","year","month","timeZone","ignoreTransferTime","layout","periodic","periodInterval","periodUnit","doubleNumbers","effectType","headTitle","footTitle","afterDeadline","timerBlock","bodyBlock","html","ITEMS_HAS_OPTIONS","SyoTimer","init","settings","options","extend","itemTypes","staticMethod","getItemTypesByLayout","_itemsHas","i","each","data","_render","apply","_perSecondHandler","elementBox","timerItem","getTimerItem","headBlock","class","footBlock","itemBlocks","item","clone","addClass","append","timerBlocks","css","currentDate","Date","deadLineDate","differenceInMilliSec","getDifferenceWithTimezone","secondsToDeadLine","getSecondsToDeadLine","_refreshUnitsDom","_applyEffectSwitch","unitList","unitsToDeadLine","getUnitsToDeadLine","unitValue","itemBlock","format2","element","setTimeout","unitItemBlock","nextUnit","animate","opacity","timerCellValue","text","timerCellUnit","timerCell","push","differenceInSeconds","Math","floor","additionalInUnit","differenceInUnit","periodUnitInSeconds","getPeriodUnit","fullTimeUnitsBetween","ceil","abs","unitInMilliSec","given_period_unit","differenceByLocalTimezone","getTime","amendmentOnTimezone","amendmentOnTransferTime","parseFloat","getTimezoneOffset","isUse","methods","setOption","name","value","hasOwnProperty","fn","syotimer","otherArgs","Array","prototype","slice","call","arguments","error"],"mappings":"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"}