{"version":3,"file":"jquery.syotimer.min.js","sources":["../../source/localization.ts","../../source/constants.ts","../../source/utils.ts","../../source/SyoTimer.ts","../../source/index.ts"],"sourcesContent":["import $ from 'jquery';\n\n$.syotimerLang = {\n  rus: {\n    second: ['секунда', 'секунды', 'секунд'],\n    minute: ['минута', 'минуты', 'минут'],\n    hour: ['час', 'часа', 'часов'],\n    day: ['день', 'дня', 'дней'],\n    handler: function rusNumeral(number, words) {\n      const cases = [2, 0, 1, 1, 1, 2];\n      if (number % 100 > 4 && number % 100 < 20) {\n        return words[2];\n      }\n      const index = cases[number % 10 < 5 ? number % 10 : 5];\n      return words[index];\n    },\n  },\n  eng: {\n    second: ['second', 'seconds'],\n    minute: ['minute', 'minutes'],\n    hour: ['hour', 'hours'],\n    day: ['day', 'days'],\n  },\n  por: {\n    second: ['segundo', 'segundos'],\n    minute: ['minuto', 'minutos'],\n    hour: ['hora', 'horas'],\n    day: ['dia', 'dias'],\n  },\n  spa: {\n    second: ['segundo', 'segundos'],\n    minute: ['minuto', 'minutos'],\n    hour: ['hora', 'horas'],\n    day: ['día', 'días'],\n  },\n  heb: {\n    second: ['שניה', 'שניות'],\n    minute: ['דקה', 'דקות'],\n    hour: ['שעה', 'שעות'],\n    day: ['יום', 'ימים'],\n  },\n};\n","import $ from 'jquery';\nimport type { SyoTimerInternalOptions, ItemsHas, LinkedList, UnitLong, UnitShort } from './types';\n\nexport const DAY: UnitLong = 'day';\nexport const HOUR: UnitLong = 'hour';\nexport const MINUTE: UnitLong = 'minute';\nexport const SECOND: UnitLong = 'second';\nexport const DAY_IN_SEC = 24 * 60 * 60;\nexport const HOUR_IN_SEC = 60 * 60;\nexport const MINUTE_IN_SEC = 60;\nexport const LAYOUT_TYPES: Record<UnitShort, UnitLong> = {\n  d: DAY,\n  h: HOUR,\n  m: MINUTE,\n  s: SECOND,\n};\n\nexport const unitLinkedList: LinkedList<UnitLong> = {\n  list: [SECOND, MINUTE, HOUR, DAY],\n  next(current) {\n    const currentIndex = this.list.indexOf(current);\n    return currentIndex < this.list.length ? this.list[currentIndex + 1] : null;\n  },\n  prev(current) {\n    const currentIndex = this.list.indexOf(current);\n    return currentIndex > 0 ? this.list[currentIndex - 1] : null;\n  },\n};\n\nexport const defaultItemsHas: ItemsHas = {\n  second: false,\n  minute: false,\n  hour: false,\n  day: false,\n};\n\nexport const defaultOptions: SyoTimerInternalOptions = {\n  date: 0,\n  layout: 'dhms',\n  periodic: false,\n  periodInterval: 7,\n  periodUnit: 'd',\n  doubleNumbers: true,\n  effectType: 'none',\n  lang: 'eng',\n  headTitle: '',\n  footTitle: '',\n  afterDeadline: (timerBlock) => {\n    timerBlock.bodyBlock.html('<p style=\"font-size: 1.2em;\">The countdown is finished!</p>');\n  },\n  itemTypes: ['day', 'hour', 'minute', 'second'],\n  itemsHas: $.extend({}, defaultItemsHas),\n};\n","import {\n  DAY,\n  HOUR,\n  MINUTE,\n  SECOND,\n  DAY_IN_SEC,\n  HOUR_IN_SEC,\n  MINUTE_IN_SEC,\n  LAYOUT_TYPES,\n  unitLinkedList,\n} from './constants';\nimport type { LanguageHandler, SyoTimerInternalOptions, Unit, UnitLong, UnitShort } from './types';\n\n/**\n * Determine a unit of period in milliseconds\n */\nfunction getPeriodUnit(periodUnit: Unit) {\n  switch (periodUnit) {\n    case 'd':\n    case DAY:\n      return DAY_IN_SEC;\n    case 'h':\n    case HOUR:\n      return HOUR_IN_SEC;\n    case 'm':\n    case MINUTE:\n      return MINUTE_IN_SEC;\n    case 's':\n    case SECOND:\n    default:\n      return 1;\n  }\n}\n\n/**\n * Formation of numbers with leading zeros\n */\nexport function format2(numb: number, isUse?: boolean) {\n  return numb <= 9 && !!isUse ? `0${numb}` : String(numb);\n}\n\nexport function getItemTypesByLayout(layout: string) {\n  const itemTypes = [] as UnitLong[];\n  for (let i = 0; i < layout.length; i += 1) {\n    itemTypes.push(LAYOUT_TYPES[layout[i] as UnitShort]);\n  }\n  return itemTypes;\n}\n\n/**\n * Getting count of units to deadline\n */\nexport function getUnitsToDeadLine(secondsToDeadLine: number) {\n  let remainsSeconds = secondsToDeadLine;\n  let unit: UnitLong | null = DAY;\n  const unitsToDeadLine: Record<UnitLong, number> = {\n    day: 0,\n    hour: 0,\n    minute: 0,\n    second: 0,\n  };\n  do {\n    const unitInMilliSec = getPeriodUnit(unit);\n    unitsToDeadLine[unit] = Math.floor(remainsSeconds / unitInMilliSec);\n    remainsSeconds %= unitInMilliSec;\n    // eslint-disable-next-line no-cond-assign\n  } while ((unit = unitLinkedList.prev(unit)));\n  return unitsToDeadLine;\n}\n\n/**\n * Return once cell DOM of countdown: day, hour, minute, second\n */\nexport function getTimerItem() {\n  const timerCellValue = $('<div/>', {\n    class: 'syotimer-cell__value',\n    text: '0',\n  });\n  const timerCellUnit = $('<div/>', { class: 'syotimer-cell__unit' });\n  const timerCell = $('<div/>', { class: 'syotimer-cell' });\n  timerCell.append(timerCellValue).append(timerCellUnit);\n  return timerCell;\n}\n\n/**\n * Getting count of seconds to deadline\n */\nexport function getSecondsToDeadLine(\n  differenceInMilliSec: number,\n  options: SyoTimerInternalOptions,\n) {\n  let differenceInSeconds = differenceInMilliSec / 1000;\n  differenceInSeconds = Math.floor(differenceInSeconds);\n\n  if (!options.periodic) return differenceInSeconds;\n\n  let differenceInUnit: number;\n  const periodUnitInSeconds = getPeriodUnit(options.periodUnit);\n  let fullTimeUnitsBetween = differenceInMilliSec / (periodUnitInSeconds * 1000);\n  fullTimeUnitsBetween = Math.ceil(fullTimeUnitsBetween);\n  fullTimeUnitsBetween = Math.abs(fullTimeUnitsBetween);\n  if (differenceInSeconds >= 0) {\n    differenceInUnit = fullTimeUnitsBetween % options.periodInterval;\n    differenceInUnit = differenceInUnit === 0 ? options.periodInterval : differenceInUnit;\n    differenceInUnit -= 1;\n  } else {\n    differenceInUnit = options.periodInterval - (fullTimeUnitsBetween % options.periodInterval);\n  }\n\n  const additionalInUnit = differenceInSeconds % periodUnitInSeconds;\n  // fix когда дедлайн раньше текущей даты,\n  // возникает баг с неправильным расчетом интервала при different пропорциональной periodUnit\n  if (additionalInUnit === 0 && differenceInSeconds < 0) {\n    differenceInUnit -= 1;\n  }\n  const secondsToDeadLine = Math.abs(differenceInUnit * periodUnitInSeconds + additionalInUnit);\n  return secondsToDeadLine;\n}\n\n/**\n * Universal function for get correct inducement of nouns after a numeral (`number`)\n */\nconst universal: LanguageHandler = (n: number, words: string[]) => (n === 1 ? words[0] : words[1]);\n\n/**\n * Getting the correct declension of words after numerals\n */\nexport function getNumeral(n: number, lang: string, unit: UnitLong) {\n  const handler: LanguageHandler = $.syotimerLang[lang].handler || universal;\n  const words: string[] = $.syotimerLang[lang][unit];\n  return handler(n, words);\n}\n","import $ from 'jquery';\nimport { defaultOptions, defaultItemsHas, DAY, SECOND, unitLinkedList } from './constants';\nimport {\n  getItemTypesByLayout,\n  getNumeral,\n  getSecondsToDeadLine,\n  getTimerItem,\n  getUnitsToDeadLine,\n  format2,\n} from './utils';\nimport type {\n  SyoTimerOptions,\n  SyoTimerInternalOptions,\n  SyoTimerItemBlocks,\n  SyoTimerEffectType,\n  UnitLong,\n} from './types';\n\nexport class SyoTimer {\n  element: JQuery;\n\n  constructor(element: HTMLElement, options: SyoTimerInternalOptions) {\n    this.element = $(element);\n    this.element.data('syotimer-options', options);\n    this.render();\n  }\n\n  /**\n   * Rendering base elements of countdown\n   * @private\n   */\n  private render() {\n    const options = this.element.data('syotimer-options') as SyoTimerInternalOptions;\n\n    const timerItem = getTimerItem();\n    const headBlock = $('<div/>', { class: 'syotimer__head' }).html(options.headTitle);\n    const bodyBlock = $('<div/>', { class: 'syotimer__body' });\n    const footBlock = $('<div/>', { class: 'syotimer__footer' }).html(options.footTitle);\n    const itemBlocks: SyoTimerItemBlocks = {};\n\n    for (let i = 0; i < options.itemTypes.length; i += 1) {\n      const item = timerItem.clone();\n\n      item.addClass(`syotimer-cell_type_${options.itemTypes[i]}`);\n      bodyBlock.append(item);\n\n      itemBlocks[options.itemTypes[i]] = item;\n    }\n\n    const timerBlocks = { headBlock, bodyBlock, footBlock };\n\n    this.element\n      .data('syotimer-blocks', timerBlocks)\n      .data('syotimer-items', itemBlocks)\n      .addClass('syotimer')\n      .append(headBlock)\n      .append(bodyBlock)\n      .append(footBlock);\n  }\n\n  /**\n   * Handler called per seconds while countdown is not over\n   */\n  tick() {\n    const options = this.element.data('syotimer-options') as SyoTimerInternalOptions;\n    $('.syotimer-cell > .syotimer-cell__value', this.element).css('opacity', 1);\n    const currentTime = new Date().getTime();\n    const deadLineTime = options.date instanceof Date ? options.date.getTime() : options.date;\n    const differenceInMilliSec = deadLineTime - currentTime;\n    const secondsToDeadLine = getSecondsToDeadLine(differenceInMilliSec, options);\n    if (secondsToDeadLine >= 0) {\n      this.refreshUnitsDom(secondsToDeadLine);\n      this.applyEffectSwitch(options.effectType);\n    } else {\n      const elementBox = $.extend(this.element, this.element.data('syotimer-blocks'));\n      options.afterDeadline(elementBox);\n    }\n  }\n\n  /**\n   * Refresh unit DOM of countdown\n   * @private\n   */\n  private refreshUnitsDom(secondsToDeadLine: number) {\n    const options = this.element.data('syotimer-options') as SyoTimerInternalOptions;\n    const itemBlocks = this.element.data('syotimer-items');\n    const unitList = options.itemTypes;\n    const unitsToDeadLine = getUnitsToDeadLine(secondsToDeadLine);\n\n    if (!options.itemsHas.day) {\n      unitsToDeadLine.hour += unitsToDeadLine.day * 24;\n    }\n    if (!options.itemsHas.hour) {\n      unitsToDeadLine.minute += unitsToDeadLine.hour * 60;\n    }\n    if (!options.itemsHas.minute) {\n      unitsToDeadLine.second += unitsToDeadLine.minute * 60;\n    }\n    for (let i = 0; i < unitList.length; i += 1) {\n      const unit = unitList[i];\n      const unitValue = unitsToDeadLine[unit];\n      const itemBlock = itemBlocks[unit];\n      itemBlock.data('syotimer-unit-value', unitValue);\n      $('.syotimer-cell__value', itemBlock).html(\n        format2(unitValue, unit !== DAY ? options.doubleNumbers : false),\n      );\n      $('.syotimer-cell__unit', itemBlock).html(getNumeral(unitValue, options.lang, unit));\n    }\n  }\n\n  /**\n   * Applying effect of changing numbers\n   * @private\n   */\n  private applyEffectSwitch(effectType: SyoTimerEffectType, unit: UnitLong = SECOND) {\n    switch (effectType) {\n      case 'opacity': {\n        const itemBlocks = this.element.data('syotimer-items');\n        const unitItemBlock = itemBlocks[unit];\n        if (unitItemBlock) {\n          const nextUnit = unitLinkedList.next(unit);\n          const unitValue = unitItemBlock.data('syotimer-unit-value');\n          $('.syotimer-cell__value', unitItemBlock).animate({ opacity: 0.1 }, 1000, 'linear', () =>\n            this.tick(),\n          );\n          if (nextUnit && unitValue === 0) {\n            this.applyEffectSwitch(effectType, nextUnit);\n          }\n        }\n        return;\n      }\n      case 'none':\n      default: {\n        setTimeout(() => this.tick(), 1000);\n      }\n    }\n  }\n}\n\nexport default function mapSyoTimer(elements: JQuery, inputOptions?: SyoTimerOptions) {\n  const options = $.extend({}, defaultOptions, inputOptions || {});\n  options.itemTypes = getItemTypesByLayout(options.layout);\n  options.itemsHas = $.extend({}, defaultItemsHas);\n\n  for (let i = 0; i < options.itemTypes.length; i += 1) {\n    options.itemsHas[options.itemTypes[i]] = true;\n  }\n\n  return elements.each(function init() {\n    const timer = new SyoTimer(this, options);\n    timer.tick();\n  });\n}\n","import $ from 'jquery';\nimport './localization';\nimport mapSyoTimer from './SyoTimer';\nimport type {\n  SyoTimerOptions,\n  SyoTimerMethods,\n  SyoTimerOptionProps,\n  SyoTimerOptionValues,\n} from './types';\n\nconst methods: Record<SyoTimerMethods, Function> = {\n  setOption(name: SyoTimerOptionProps, value: SyoTimerOptionValues) {\n    const elementBox = $(this);\n    const options = elementBox.data('syotimer-options');\n    if (Object.prototype.hasOwnProperty.call(options, name)) {\n      options[name] = value;\n      elementBox.data('syotimer-options', options);\n    }\n  },\n};\n\n$.fn.extend({\n  syotimer(\n    this: JQuery,\n    options: SyoTimerOptions | SyoTimerMethods,\n    property: SyoTimerOptionProps,\n    value: SyoTimerOptionValues,\n  ) {\n    if (typeof options === 'string' && options === 'setOption') {\n      return this.each(function method() {\n        methods[options].apply(this, [property, value]);\n      });\n    }\n    if (options === null || options === undefined || typeof options === 'object') {\n      return mapSyoTimer(this, options);\n    }\n    return $.error('SyoTimer. Error in call methods: methods is not exist');\n  },\n});\n"],"names":["$$1","syotimerLang","rus","second","minute","hour","day","handler","number","words","eng","por","spa","heb","DAY","HOUR","MINUTE","SECOND","DAY_IN_SEC","HOUR_IN_SEC","MINUTE_IN_SEC","LAYOUT_TYPES","d","h","m","s","unitLinkedList","list","next","current","currentIndex","this","indexOf","length","prev","defaultItemsHas","defaultOptions","date","layout","periodic","periodInterval","periodUnit","doubleNumbers","effectType","lang","headTitle","footTitle","afterDeadline","timerBlock","bodyBlock","html","itemTypes","itemsHas","$","extend","getPeriodUnit","universal","n","getNumeral","unit","SyoTimer","element","options","data","render","prototype","timerCellValue","timerCellUnit","timerCell","timerItem","class","text","append","headBlock","footBlock","itemBlocks","i","item","clone","addClass","concat","timerBlocks","tick","css","currentTime","Date","getTime","secondsToDeadLine","differenceInMilliSec","differenceInUnit","differenceInSeconds","Math","floor","periodUnitInSeconds","fullTimeUnitsBetween","ceil","abs","additionalInUnit","getSecondsToDeadLine","refreshUnitsDom","applyEffectSwitch","elementBox","numb","isUse","unitList","unitsToDeadLine","remainsSeconds","unitInMilliSec","getUnitsToDeadLine","unitValue","itemBlock","String","_this","setTimeout","unitItemBlock","nextUnit","animate","opacity","mapSyoTimer","elements","inputOptions","push","getItemTypesByLayout","each","methods","setOption","name","value","Object","hasOwnProperty","call","fn","syotimer","property","apply","error"],"mappings":"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"}