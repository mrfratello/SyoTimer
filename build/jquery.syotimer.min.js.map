{"version":3,"file":"jquery.syotimer.min.js","sources":["../source/localization.ts","../source/constants.ts","../source/utils.ts","../source/SyoTimer.ts","../source/index.ts"],"sourcesContent":["import $ from \"jquery\";\n\n$.syotimerLang = {\n  rus: {\n    second: [\"секунда\", \"секунды\", \"секунд\"],\n    minute: [\"минута\", \"минуты\", \"минут\"],\n    hour: [\"час\", \"часа\", \"часов\"],\n    day: [\"день\", \"дня\", \"дней\"],\n    handler: function rusNumeral(number, words) {\n      const cases = [2, 0, 1, 1, 1, 2];\n      if (number % 100 > 4 && number % 100 < 20) {\n        return words[2];\n      }\n      const index = cases[number % 10 < 5 ? number % 10 : 5];\n      return words[index];\n    },\n  },\n  eng: {\n    second: [\"second\", \"seconds\"],\n    minute: [\"minute\", \"minutes\"],\n    hour: [\"hour\", \"hours\"],\n    day: [\"day\", \"days\"],\n  },\n  por: {\n    second: [\"segundo\", \"segundos\"],\n    minute: [\"minuto\", \"minutos\"],\n    hour: [\"hora\", \"horas\"],\n    day: [\"dia\", \"dias\"],\n  },\n  spa: {\n    second: [\"segundo\", \"segundos\"],\n    minute: [\"minuto\", \"minutos\"],\n    hour: [\"hora\", \"horas\"],\n    day: [\"día\", \"días\"],\n  },\n  heb: {\n    second: [\"שניה\", \"שניות\"],\n    minute: [\"דקה\", \"דקות\"],\n    hour: [\"שעה\", \"שעות\"],\n    day: [\"יום\", \"ימים\"],\n  },\n};\n","import $ from \"jquery\";\nimport type {\n  SyoTimerInternalOptions,\n  ItemsHas,\n  LinkedList,\n  UnitLong,\n  UnitShort,\n} from \"./types\";\n\nexport const DAY: UnitLong = \"day\";\nexport const HOUR: UnitLong = \"hour\";\nexport const MINUTE: UnitLong = \"minute\";\nexport const SECOND: UnitLong = \"second\";\nexport const DAY_IN_SEC = 24 * 60 * 60;\nexport const HOUR_IN_SEC = 60 * 60;\nexport const MINUTE_IN_SEC = 60;\nexport const LAYOUT_TYPES: Record<UnitShort, UnitLong> = {\n  d: DAY,\n  h: HOUR,\n  m: MINUTE,\n  s: SECOND,\n};\n\nexport const unitLinkedList: LinkedList<UnitLong> = {\n  list: [SECOND, MINUTE, HOUR, DAY],\n  next(current) {\n    const currentIndex = this.list.indexOf(current);\n    return currentIndex < this.list.length ? this.list[currentIndex + 1] : null;\n  },\n  prev(current) {\n    const currentIndex = this.list.indexOf(current);\n    return currentIndex > 0 ? this.list[currentIndex - 1] : null;\n  },\n};\n\nexport const defaultItemsHas: ItemsHas = {\n  second: false,\n  minute: false,\n  hour: false,\n  day: false,\n};\n\nexport const defaultOptions: SyoTimerInternalOptions = {\n  date: 0,\n  layout: \"dhms\",\n  periodic: false,\n  periodInterval: 7,\n  periodUnit: \"d\",\n  doubleNumbers: true,\n  effectType: \"none\",\n  lang: \"eng\",\n  headTitle: \"\",\n  footTitle: \"\",\n  afterDeadline: function (timerBlock) {\n    timerBlock.bodyBlock.html(\n      '<p style=\"font-size: 1.2em;\">The countdown is finished!</p>'\n    );\n  },\n  itemTypes: [\"day\", \"hour\", \"minute\", \"second\"],\n  itemsHas: $.extend({}, defaultItemsHas),\n};\n","import {\n  DAY,\n  HOUR,\n  MINUTE,\n  SECOND,\n  DAY_IN_SEC,\n  HOUR_IN_SEC,\n  MINUTE_IN_SEC,\n  LAYOUT_TYPES,\n  unitLinkedList,\n} from \"./constants\";\nimport type {\n  LanguageHandler,\n  SyoTimerInternalOptions,\n  Unit,\n  UnitLong,\n  UnitShort,\n} from \"./types\";\n\n/**\n * Determine a unit of period in milliseconds\n */\nfunction getPeriodUnit(periodUnit: Unit) {\n  switch (periodUnit) {\n    case \"d\":\n    case DAY:\n      return DAY_IN_SEC;\n    case \"h\":\n    case HOUR:\n      return HOUR_IN_SEC;\n    case \"m\":\n    case MINUTE:\n      return MINUTE_IN_SEC;\n    case \"s\":\n    case SECOND:\n    default:\n      return 1;\n  }\n}\n\n/**\n * Formation of numbers with leading zeros\n */\nexport function format2(numb: number, isUse?: boolean) {\n  return numb <= 9 && !!isUse ? \"0\" + numb : \"\" + numb;\n}\n\nexport function getItemTypesByLayout(layout: string) {\n  var itemTypes = [] as UnitLong[];\n  for (var i = 0; i < layout.length; i++) {\n    itemTypes.push(LAYOUT_TYPES[layout[i] as UnitShort]);\n  }\n  return itemTypes;\n}\n\n/**\n * Getting count of units to deadline\n */\nexport function getUnitsToDeadLine(secondsToDeadLine: number) {\n  let remainsSeconds = secondsToDeadLine;\n  let unit: UnitLong | null = DAY;\n  const unitsToDeadLine: Record<UnitLong, number> = {\n    day: 0,\n    hour: 0,\n    minute: 0,\n    second: 0,\n  };\n  do {\n    const unitInMilliSec = getPeriodUnit(unit);\n    unitsToDeadLine[unit] = Math.floor(remainsSeconds / unitInMilliSec);\n    remainsSeconds %= unitInMilliSec;\n  } while ((unit = unitLinkedList.prev(unit)));\n  return unitsToDeadLine;\n}\n\n/**\n * Return once cell DOM of countdown: day, hour, minute, second\n */\nexport function getTimerItem() {\n  const timerCellValue = $(\"<div/>\", {\n    class: \"syotimer-cell__value\",\n    text: \"0\",\n  });\n  const timerCellUnit = $(\"<div/>\", { class: \"syotimer-cell__unit\" });\n  const timerCell = $(\"<div/>\", { class: \"syotimer-cell\" });\n  timerCell.append(timerCellValue).append(timerCellUnit);\n  return timerCell;\n}\n\n/**\n * Getting count of seconds to deadline\n */\nexport function getSecondsToDeadLine(\n  differenceInMilliSec: number,\n  options: SyoTimerInternalOptions\n) {\n  let differenceInSeconds = differenceInMilliSec / 1000;\n  differenceInSeconds = Math.floor(differenceInSeconds);\n\n  if (!options.periodic) return differenceInSeconds;\n\n  let differenceInUnit: number;\n  const periodUnitInSeconds = getPeriodUnit(options.periodUnit);\n  let fullTimeUnitsBetween =\n    differenceInMilliSec / (periodUnitInSeconds * 1000);\n  fullTimeUnitsBetween = Math.ceil(fullTimeUnitsBetween);\n  fullTimeUnitsBetween = Math.abs(fullTimeUnitsBetween);\n  if (differenceInSeconds >= 0) {\n    differenceInUnit = fullTimeUnitsBetween % options.periodInterval;\n    differenceInUnit =\n      differenceInUnit === 0 ? options.periodInterval : differenceInUnit;\n    differenceInUnit -= 1;\n  } else {\n    differenceInUnit =\n      options.periodInterval - (fullTimeUnitsBetween % options.periodInterval);\n  }\n\n  const additionalInUnit = differenceInSeconds % periodUnitInSeconds;\n  // fix когда дедлайн раньше текущей даты,\n  // возникает баг с неправильным расчетом интервала при different пропорциональной periodUnit\n  if (additionalInUnit === 0 && differenceInSeconds < 0) {\n    differenceInUnit--;\n  }\n  const secondsToDeadLine = Math.abs(\n    differenceInUnit * periodUnitInSeconds + additionalInUnit\n  );\n  return secondsToDeadLine;\n}\n\n/**\n * Universal function for get correct inducement of nouns after a numeral (`number`)\n */\nconst universal: LanguageHandler = (n: number, words: string[]) =>\n  n === 1 ? words[0] : words[1];\n\n/**\n * Getting the correct declension of words after numerals\n */\nexport function getNumeral(n: number, lang: string, unit: UnitLong) {\n  const handler: LanguageHandler = $.syotimerLang[lang].handler || universal;\n  const words: string[] = $.syotimerLang[lang][unit];\n  return handler(n, words);\n}\n","import $ from \"jquery\";\nimport {\n  defaultOptions,\n  defaultItemsHas,\n  DAY,\n  SECOND,\n  unitLinkedList,\n} from \"./constants\";\nimport {\n  getItemTypesByLayout,\n  getNumeral,\n  getSecondsToDeadLine,\n  getTimerItem,\n  getUnitsToDeadLine,\n  format2,\n} from \"./utils\";\nimport type {\n  SyoTimerOptions,\n  SyoTimerInternalOptions,\n  SyoTimerItemBlocks,\n  SyoTimerEffectType,\n  UnitLong,\n} from \"./types\";\n\nexport function mapSyoTimer(elements: JQuery, inputOptions?: SyoTimerOptions) {\n  const options = $.extend({}, defaultOptions, inputOptions || {});\n  options.itemTypes = getItemTypesByLayout(options.layout);\n  options.itemsHas = $.extend({}, defaultItemsHas);\n\n  for (var i = 0; i < options.itemTypes.length; i++) {\n    options.itemsHas[options.itemTypes[i]] = true;\n  }\n\n  return elements.each(function () {\n    new SyoTimer(this, options);\n  });\n}\n\nclass SyoTimer {\n  element: JQuery;\n\n  constructor(element: HTMLElement, options: SyoTimerInternalOptions) {\n    this.element = $(element);\n    this.element.data(\"syotimer-options\", options);\n    this.render();\n    this.perSecondHandler();\n  }\n\n  /**\n   * Rendering base elements of countdown\n   * @private\n   */\n  private render() {\n    const options = this.element.data(\n      \"syotimer-options\"\n    ) as SyoTimerInternalOptions;\n\n    const timerItem = getTimerItem();\n    const headBlock = $(\"<div/>\", { class: \"syotimer__head\" }).html(\n      options.headTitle\n    );\n    const bodyBlock = $(\"<div/>\", { class: \"syotimer__body\" });\n    const footBlock = $(\"<div/>\", { class: \"syotimer__footer\" }).html(\n      options.footTitle\n    );\n    const itemBlocks: SyoTimerItemBlocks = {};\n\n    for (var i = 0; i < options.itemTypes.length; i++) {\n      const item = timerItem.clone();\n\n      item.addClass(\"syotimer-cell_type_\" + options.itemTypes[i]);\n      bodyBlock.append(item);\n\n      itemBlocks[options.itemTypes[i]] = item;\n    }\n\n    const timerBlocks = {\n      headBlock: headBlock,\n      bodyBlock: bodyBlock,\n      footBlock: footBlock,\n    };\n\n    this.element\n      .data(\"syotimer-blocks\", timerBlocks)\n      .data(\"syotimer-items\", itemBlocks)\n      .addClass(\"syotimer\")\n      .append(headBlock)\n      .append(bodyBlock)\n      .append(footBlock);\n  }\n\n  /**\n   * Handler called per seconds while countdown is not over\n   * @private\n   */\n  private perSecondHandler() {\n    const options = this.element.data(\n      \"syotimer-options\"\n    ) as SyoTimerInternalOptions;\n    $(\".syotimer-cell > .syotimer-cell__value\", this.element).css(\"opacity\", 1);\n    const currentTime = new Date().getTime();\n    const deadLineTime =\n      options.date instanceof Date ? options.date.getTime() : options.date;\n    const differenceInMilliSec = deadLineTime - currentTime;\n    const secondsToDeadLine = getSecondsToDeadLine(\n      differenceInMilliSec,\n      options\n    );\n    if (secondsToDeadLine >= 0) {\n      this.refreshUnitsDom(secondsToDeadLine);\n      this.applyEffectSwitch(options.effectType);\n    } else {\n      const elementBox = $.extend(\n        this.element,\n        this.element.data(\"syotimer-blocks\")\n      );\n      options.afterDeadline(elementBox);\n    }\n  }\n\n  /**\n   * Refresh unit DOM of countdown\n   * @private\n   */\n  private refreshUnitsDom(secondsToDeadLine: number) {\n    const options = this.element.data(\n      \"syotimer-options\"\n    ) as SyoTimerInternalOptions;\n    const itemBlocks = this.element.data(\"syotimer-items\");\n    const unitList = options.itemTypes;\n    const unitsToDeadLine = getUnitsToDeadLine(secondsToDeadLine);\n\n    if (!options.itemsHas.day) {\n      unitsToDeadLine.hour += unitsToDeadLine.day * 24;\n    }\n    if (!options.itemsHas.hour) {\n      unitsToDeadLine.minute += unitsToDeadLine.hour * 60;\n    }\n    if (!options.itemsHas.minute) {\n      unitsToDeadLine.second += unitsToDeadLine.minute * 60;\n    }\n    for (var i = 0; i < unitList.length; i++) {\n      var unit = unitList[i],\n        unitValue = unitsToDeadLine[unit],\n        itemBlock = itemBlocks[unit];\n      itemBlock.data(\"syotimer-unit-value\", unitValue);\n      $(\".syotimer-cell__value\", itemBlock).html(\n        format2(unitValue, unit !== DAY ? options.doubleNumbers : false)\n      );\n      $(\".syotimer-cell__unit\", itemBlock).html(\n        getNumeral(unitValue, options.lang, unit)\n      );\n    }\n  }\n\n  /**\n   * Applying effect of changing numbers\n   * @private\n   */\n  private applyEffectSwitch(\n    effectType: SyoTimerEffectType,\n    unit: UnitLong = SECOND\n  ) {\n    switch (effectType) {\n      case \"opacity\":\n        const itemBlocks = this.element.data(\"syotimer-items\");\n        const unitItemBlock = itemBlocks[unit];\n        if (unitItemBlock) {\n          const nextUnit = unitLinkedList.next(unit);\n          const unitValue = unitItemBlock.data(\"syotimer-unit-value\");\n          $(\".syotimer-cell__value\", unitItemBlock).animate(\n            { opacity: 0.1 },\n            1000,\n            \"linear\",\n            () => this.perSecondHandler()\n          );\n          if (nextUnit && unitValue === 0) {\n            this.applyEffectSwitch(effectType, nextUnit);\n          }\n        }\n        return;\n      case \"none\":\n      default:\n        setTimeout(() => this.perSecondHandler(), 1000);\n    }\n  }\n}\n","import $ from \"jquery\";\nimport \"./localization\";\nimport { mapSyoTimer } from \"./SyoTimer\";\nimport type {\n  SyoTimerOptions,\n  SyoTimerMethods,\n  SyoTimerOptionProps,\n  SyoTimerOptionValues,\n} from \"./types\";\n\nconst methods: Record<SyoTimerMethods, Function> = {\n  setOption: function (name: SyoTimerOptionProps, value: SyoTimerOptionValues) {\n    const elementBox = $(this);\n    const options = elementBox.data(\"syotimer-options\");\n    if (options.hasOwnProperty(name)) {\n      options[name] = value;\n      elementBox.data(\"syotimer-options\", options);\n    }\n  },\n};\n\n$.fn.extend({\n  syotimer: function (\n    this: JQuery,\n    options: SyoTimerOptions | SyoTimerMethods\n  ) {\n    if (typeof options === \"string\" && options === \"setOption\") {\n      var otherArgs = Array.prototype.slice.call(arguments, 1);\n      return this.each(function () {\n        methods[options].apply(this, otherArgs);\n      });\n    }\n    if (\n      options === null ||\n      options === undefined ||\n      typeof options === \"object\"\n    ) {\n      return mapSyoTimer(this, options);\n    }\n    $.error(\"SyoTimer. Error in call methods: methods is not exist\");\n  },\n});\n"],"names":["syotimerLang","rus","second","minute","hour","day","handler","number","words","eng","por","spa","heb","DAY","HOUR","MINUTE","SECOND","LAYOUT_TYPES","d","h","m","s","unitLinkedList","list","next","current","currentIndex","this","indexOf","length","prev","defaultItemsHas","defaultOptions","date","layout","periodic","periodInterval","periodUnit","doubleNumbers","effectType","lang","headTitle","footTitle","afterDeadline","timerBlock","bodyBlock","html","itemTypes","itemsHas","$","extend","getPeriodUnit","universal","n","getNumeral","unit","mapSyoTimer","elements","inputOptions","options","i","push","getItemTypesByLayout","each","SyoTimer","element","data","render","perSecondHandler","timerCellValue","timerCellUnit","timerCell","timerItem","class","text","append","headBlock","footBlock","itemBlocks","item","clone","addClass","timerBlocks","css","currentTime","Date","getTime","secondsToDeadLine","differenceInMilliSec","differenceInUnit","differenceInSeconds","Math","floor","periodUnitInSeconds","fullTimeUnitsBetween","ceil","abs","additionalInUnit","getSecondsToDeadLine","refreshUnitsDom","applyEffectSwitch","elementBox","numb","isUse","unitList","unitsToDeadLine","remainsSeconds","unitInMilliSec","getUnitsToDeadLine","unitValue","itemBlock","unitItemBlock","nextUnit","animate","opacity","_this","setTimeout","methods","setOption","name","value","hasOwnProperty","fn","syotimer","otherArgs","Array","prototype","slice","call","arguments","apply","error"],"mappings":"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"}